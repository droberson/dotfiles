# .muttrc for Daniel Roberson

set editor="emacsclient -nw %s"
set mail_check = 60
set timeout = 10
set beep_new = yes
#set mbox_type=Maildir

set record="/home/daniel/Mail/sent"

# ACCOUNT SETTINGS
set certificate_file=/home/daniel/.mutt_certificates

unset wait_key

# KEY BINDINGS
#bind index "^" imap-fetch-mail
macro index Y "!fetchmail 2>&1 >/dev/null \n" "Use fetchmail to get new mail."


bind pager   <up>     previous-line
bind pager   <down>   next-line
bind pager   <left>   previous-entry
bind pager   <right>  next-entry

# Do not include myself in group replies
unset metoo
alternates droberson@courtesycall.com

# VIEW HTML SHIT EMAILS
auto_view text/html
alternative_order text/plain text/enriched text/html

# ADDRESS BOOK
set alias_file=~/.mutt_alias
source ~/.mutt_alias
set query_command= "abook --mutt-query '%s'"
macro index,pager A "<pipe-message>abook --add-email-quiet<return>" "add the sender address to abook"

# BEHAVIOR SETTINGS
set include=yes			# include message in replies
set nomark_old			# don't mark unread mail as old
set copy=yes			# save copies of outgoing mail
set fast_reply=yes		# skip prompting of who to reply to
set tilde			# pad end of messages with ~ (like vi)

# COLORS
#	ITEM		FOREGROUND	BACKGROUND
color	hdrdefault	black		cyan
color	quoted		brightwhite	black
color	signature	magenta		black
color	indicator	black		cyan
color	attachment	black		green
color	error		brightred	black
color	message		white		black
color	search		brightwhite	magenta
color	status		brightcyan	blue
color	tree		red		black
color	normal		white		black
color	tilde		green		black
color	bold		brightyellow	black
#color	underline	magenta		black
color	markers		red		black

# URL
color body cyan black "(http|ftp|news|telnet|finger)://[^ \"\t\r\n]*"
color body cyan black "mailto:[-a-z_0-9.]+@[-a-z_0-9.]+"
mono body bold "(http|ftp|news|telnet|finger)://[^ \"\t\r\n]*"
mono body bold "mailto:[-a-z_0-9.]+@[-a-z_0-9.]+"

# EMAIL ADDRESSES
color body cyan black "[-a-z_0-9.%$]+@[-a-z_0-9.]+\\.[-a-z][-a-z]+"
mono body bold "[-a-z_0-9.%$]+@[-a-z_0-9.]+\\.[-a-z][-a-z]+"


# SPELL CHECKING
set ispell="aspell -e -c"

#GPG

# decode application/pgp
set pgp_decode_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

# create a pgp/mime signed attachment
set pgp_sign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --detach-sign --textmode %?a?-u %a? %f"

# create a application/pgp signed (old-style) message
set pgp_clearsign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="gpg --no-verbose --import %f"

# export a key from the public key ring
set pgp_export_command="gpg --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="gpg --verbose --batch --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="gpg --no-verbose --batch --quiet --with-colons --list-keys %r" 

# read in the secret key ring
set pgp_list_secring_command="gpg --no-verbose --batch --quiet --with-colons --list-secret-keys %r" 

# fetch keys
# set pgp_getkeys_command="pkspxycwrap %r"
# This will work when #172960 will be fixed upstream
# set pgp_getkeys_command="gpg --recv-keys %r"

# pattern for good signature - may need to be adapted to locale!

# set pgp_good_sign="^gpgv?: Good signature from "

# This version uses --status-fd messages
set pgp_good_sign="^\\[GNUPG:\\] GOODSIG"


set pgp_use_gpg_agent = yes
set pgp_sign_as = 22A92AA9
set pgp_timeout = 3600
set crypt_autosign = yes
set crypt_replyencrypt = yes

